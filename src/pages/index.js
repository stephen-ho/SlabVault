import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import axios from "axios";
import { load } from "cheerio";
import { useEffect, useState } from "react";
import CardInfo from "./CardInfo";
import Table from "./Table";

const inter = Inter({ subsets: ['latin'] })

export default function Home() {

  const [cardInfo, setCardInfo] = useState({});
  const [certNum, setCertNum] = useState("");
  const [isCardInfo, setIsCardInfo] = useState(true);
  const [company, setCompany] = useState("PSA");
  const [searched, setSearched] = useState([]);

  const companies = ['PSA', 'CGC', 'BGS'];

  const companyOptionElements = companies.map((company) => {
    return (
      <option key={company} value={company}>{company}</option>
    );
  });

  useEffect(() => {
    console.log(searched);
  }, [searched])

  function fetchCardInfo() {
    axios.get(`/api/proxy?company=${company}&certNum=${certNum}`)
    .then((response) => {
      const isValid = validateResponse(response, company);
      setIsCardInfo(isValid);

      if (isValid) {
        const data = parseCardInfo(response, company);
        setCardInfo(data);
        setSearched((searched) => [...searched, data]);
      }
    });
  }

  function validateResponse(response, company) {
    const $ = load(response.data);
    if (company === "PSA") {
      const alert = $('.glyphicon-alert');
      if (alert.length > 0) {
        return false;
      }
    }
    return true;
  }

  function parseCardInfo(response, company) {
    const $ = load(response.data);
    if (company === "PSA") {
      const cardData = $('tr');
      const data = {};
      for (let i = 0; i < cardData.length; i++) {
        const currentRow = cardData.eq(i);
        const header = currentRow.find('th').text();
        const value = currentRow.find('td').text();
        data[header] = value;
        data["Grading Company"] = company;
      }
      return data;
    }
  }

  // function fetchPSA() {
  //   axios.get(`/api/proxy?company=${company}&certNum=${certNum}`)
  //   .then((response) => {
  //     const $ = load(response.data);
  //     const alert = $('.glyphicon-alert');
  //     if (alert.length > 0) {
  //       setIsCardInfo(false);
  //     } else {
  //       const cardData = $('tr');
  //       const data = {};
  //       for (let i = 0; i < cardData.length; i++) {
  //         const currentRow = cardData.eq(i);
  //         const header = currentRow.find('th').text();
  //         const value = currentRow.find('td').text();
  //         data[header] = value;
  //         data["Grading Company"] = company;
  //       }
  //       setCardInfo(data);
  //       setIsCardInfo(true);
  //       setSearched((searched) => [...searched, data]);
  //     }
  //   });
  // }

  function fetchCGC() {
    axios.get(`/api/proxy?company=${company}&certNum=${certNum}`)
    .then((response) => {
      const $ = load(response.data);
      const cardData = $('dl');
      if (cardData.length === 0) {
        setIsCardInfo(false);
      } else {
        const data = {};
        for (let i = 0; i < cardData.length; i++) {
          const currentRow = cardData.eq(i);
          const header = currentRow.find('dt').text();
          const value = currentRow.find('dd').text();
          data[header] = value;
          data["Grading Company"] = company;
        }
        setCardInfo(data);
        setIsCardInfo(true);
        setSearched((searched) => [...searched, data]);
      }
    });
  }

  function fetchBGS() {
    axios.get(`/api/proxy?company=${company}&certNum=${certNum}`)
    .then((response) => {
      const $ = load(response.data);
      const alert = $('.recNotF');
      if (alert.length > 0) {
        setIsCardInfo(false);
      } else {
        const cardData = $('.cardDetail').eq(0).find('tr');
        const data = {};
        data["Card Serial Number"] = certNum;
        for (let i = 0; i < cardData.length; i++) {
          const currentRow = cardData.eq(i);
          const header = currentRow.find('b').text();
          const value = currentRow.find('td').eq(2).text();
          data[header] = value;
          data["Grading Company"] = company;
        }
        setCardInfo(data);
        setIsCardInfo(true);
        setSearched((searched) => [...searched, data]);
      }
    });
  }

  // function fetchInfo() {
  //   if (company === "PSA") {
  //     fetchPSA();
  //   } else if (company === "CGC") {
  //     fetchCGC();
  //   } else {
  //     fetchBGS();
  //   }
  // }

  function handleChange(e) {
    setCertNum(e.target.value);
  }

  function handleCompany(e) {
    setCompany(e.target.value);
  }

  const cardContent = isCardInfo ? (<CardInfo cardInfo={cardInfo} />) : (<div>Invalid Certification Number</div>);

  return (
    <>
      <Head>
        <title>SlabVault</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className="header">
          <h1>SlabVault</h1>
        </div>
        <div className="cardInput">
          <form>
            <select className="form-select" onChange={handleCompany}>
              {companyOptionElements}
            </select>
            <input
              className="form-control"
              type="text"
              name="certNo"
              placeholder="Certification #"
              value={certNum}
              onChange={handleChange}
            />
          </form>
          <button className="btn btn-primary" onClick={fetchCardInfo}>Click Me!</button>
        </div>
        {cardContent}
        <Table company={company} searched={searched} />
      </main>
    </>
  )
}
